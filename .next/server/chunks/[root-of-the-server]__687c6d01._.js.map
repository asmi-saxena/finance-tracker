{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\"\r\n\r\ntype GlobalMongoose = {\r\n  conn: typeof mongoose | null\r\n  promise: Promise<typeof mongoose> | null\r\n}\r\n\r\ndeclare global {\r\n  var mongoose: GlobalMongoose | undefined\r\n}\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please provide a MongoDB URI\")\r\n}\r\n\r\nconst cached: GlobalMongoose = global.mongoose ?? { conn: null, promise: null }\r\nglobal.mongoose = cached\r\n\r\nexport async function connectToDatabase(uri?: string) {\r\n  try {\r\n    const mongoUri = uri || MONGODB_URI\r\n    if (cached.conn) {\r\n      return cached.conn\r\n    }\r\n\r\n    if (!cached.promise) {\r\n      const opts = {\r\n        bufferCommands: false,\r\n        serverSelectionTimeoutMS: 5000,\r\n        connectTimeoutMS: 10000,\r\n        socketTimeoutMS: 45000,\r\n      }\r\n\r\n      cached.promise = mongoose.connect(mongoUri!, opts)\r\n    }\r\n\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n  } catch (error) {\r\n    console.error('MongoDB connection error:', error)\r\n    throw error\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAWA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAyB,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAC9E,OAAO,QAAQ,GAAG;AAEX,eAAe,kBAAkB,GAAY;IAClD,IAAI;QACF,MAAM,WAAW,OAAO;QACxB,IAAI,OAAO,IAAI,EAAE;YACf,OAAO,OAAO,IAAI;QACpB;QAEA,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,MAAM,OAAO;gBACX,gBAAgB;gBAChB,0BAA0B;gBAC1B,kBAAkB;gBAClB,iBAAiB;YACnB;YAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,UAAW;QAC/C;QAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;QAClC,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/lib/models.ts"],"sourcesContent":["import mongoose from \"mongoose\"\r\n\r\n// Define Category Schema\r\nconst categorySchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    color: {\r\n      type: String,\r\n      required: true,\r\n      default: \"#94a3b8\", // Default slate color\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"circle\",\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: [\"income\", \"expense\"],\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  },\r\n)\r\n\r\n// Define Transaction Schema\r\nconst transactionSchema = new mongoose.Schema(\r\n  {\r\n    amount: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: Date,\r\n      required: true,\r\n      default: Date.now,\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: [\"income\", \"expense\"],\r\n      required: true,\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Category\",\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  },\r\n)\r\n\r\n// Create or retrieve models\r\nexport const Category = mongoose.models.Category || mongoose.model(\"Category\", categorySchema)\r\nexport const Transaction = mongoose.models.Transaction || mongoose.model(\"Transaction\", transactionSchema)\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,yBAAyB;AACzB,MAAM,iBAAiB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACxC;IACE,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAU;SAAU;QAC3B,UAAU;IACZ;AACF,GACA;IACE,YAAY;AACd;AAGF,4BAA4B;AAC5B,MAAM,oBAAoB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAC3C;IACE,QAAQ;QACN,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,SAAS,KAAK,GAAG;IACnB;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAU;SAAU;QAC3B,UAAU;IACZ;IACA,UAAU;QACR,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;IACP;AACF,GACA;IACE,YAAY;AACd;AAIK,MAAM,WAAW,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,YAAY;AACxE,MAAM,cAAc,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/app/api/transactions/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\nimport { connectToDatabase } from \"@/lib/mongodb\"\r\nimport { Transaction } from \"@/lib/models\"\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectToDatabase()\r\n    const transactions = await Transaction.find()\r\n      .populate(\"category\")\r\n      .sort({ date: -1 })\r\n    return NextResponse.json(transactions)\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch transactions\" },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    await connectToDatabase()\r\n    const body = await request.json()\r\n    const transaction = await Transaction.create({\r\n      ...body,\r\n      type: body.amount > 0 ? \"income\" : \"expense\",\r\n    })\r\n    await transaction.populate(\"category\")\r\n    return NextResponse.json(transaction)\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: \"Failed to create transaction\" },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,oBAAiB,AAAD;QACtB,MAAM,eAAe,MAAM,+GAAA,CAAA,cAAW,CAAC,IAAI,GACxC,QAAQ,CAAC,YACT,IAAI,CAAC;YAAE,MAAM,CAAC;QAAE;QACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,oBAAiB,AAAD;QACtB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,cAAc,MAAM,+GAAA,CAAA,cAAW,CAAC,MAAM,CAAC;YAC3C,GAAG,IAAI;YACP,MAAM,KAAK,MAAM,GAAG,IAAI,WAAW;QACrC;QACA,MAAM,YAAY,QAAQ,CAAC;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}