{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/lib/utils.ts"],"sourcesContent":["// lib/utils.ts\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number, options: Intl.NumberFormatOptions = {}) {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    ...options,\n  })\n\n  return formatter.format(amount)\n}"],"names":[],"mappings":"AAAA,eAAe;;;;;AACf;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,eAAe,MAAc,EAAE,UAAoC,CAAC,CAAC;IACnF,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,SAAS;QAC/C,OAAO;QACP,UAAU;QACV,uBAAuB;QACvB,uBAAuB;QACvB,GAAG,OAAO;IACZ;IAEA,OAAO,UAAU,MAAM,CAAC;AAC1B","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/ui/table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx <module evaluation>\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yDACA","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/ui/table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"Table\",\n);\nexport const TableBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableBody() from the server but TableBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableBody\",\n);\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableCaption\",\n);\nexport const TableCell = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCell() from the server but TableCell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableCell\",\n);\nexport const TableFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableFooter() from the server but TableFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableFooter\",\n);\nexport const TableHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHead() from the server but TableHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableHead\",\n);\nexport const TableHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableHeader() from the server but TableHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableHeader\",\n);\nexport const TableRow = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableRow() from the server but TableRow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/table.tsx\",\n    \"TableRow\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\"\r\n\r\ntype GlobalMongoose = {\r\n  conn: typeof mongoose | null\r\n  promise: Promise<typeof mongoose> | null\r\n}\r\n\r\ndeclare global {\r\n  var mongoose: GlobalMongoose | undefined\r\n}\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please provide a MongoDB URI\")\r\n}\r\n\r\nconst cached: GlobalMongoose = global.mongoose ?? { conn: null, promise: null }\r\nglobal.mongoose = cached\r\n\r\nexport async function connectToDatabase(uri?: string) {\r\n  try {\r\n    const mongoUri = uri || MONGODB_URI\r\n    if (cached.conn) {\r\n      return cached.conn\r\n    }\r\n\r\n    if (!cached.promise) {\r\n      const opts = {\r\n        bufferCommands: false,\r\n        serverSelectionTimeoutMS: 5000,\r\n        connectTimeoutMS: 10000,\r\n        socketTimeoutMS: 45000,\r\n      }\r\n\r\n      cached.promise = mongoose.connect(mongoUri!, opts)\r\n    }\r\n\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n  } catch (error) {\r\n    console.error('MongoDB connection error:', error)\r\n    throw error\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAWA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAyB,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAC9E,OAAO,QAAQ,GAAG;AAEX,eAAe,kBAAkB,GAAY;IAClD,IAAI;QACF,MAAM,WAAW,OAAO;QACxB,IAAI,OAAO,IAAI,EAAE;YACf,OAAO,OAAO,IAAI;QACpB;QAEA,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,MAAM,OAAO;gBACX,gBAAgB;gBAChB,0BAA0B;gBAC1B,kBAAkB;gBAClB,iBAAiB;YACnB;YAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,UAAW;QAC/C;QAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;QAClC,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/lib/models.ts"],"sourcesContent":["import mongoose from \"mongoose\"\r\n\r\n// Define Category Schema\r\nconst categorySchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    color: {\r\n      type: String,\r\n      required: true,\r\n      default: \"#94a3b8\", // Default slate color\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"circle\",\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: [\"income\", \"expense\"],\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  },\r\n)\r\n\r\n// Define Transaction Schema\r\nconst transactionSchema = new mongoose.Schema(\r\n  {\r\n    amount: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: Date,\r\n      required: true,\r\n      default: Date.now,\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: [\"income\", \"expense\"],\r\n      required: true,\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Category\",\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  },\r\n)\r\n\r\n// Create or retrieve models\r\nexport const Category = mongoose.models.Category || mongoose.model(\"Category\", categorySchema)\r\nexport const Transaction = mongoose.models.Transaction || mongoose.model(\"Transaction\", transactionSchema)\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,yBAAyB;AACzB,MAAM,iBAAiB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACxC;IACE,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAU;SAAU;QAC3B,UAAU;IACZ;AACF,GACA;IACE,YAAY;AACd;AAGF,4BAA4B;AAC5B,MAAM,oBAAoB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAC3C;IACE,QAAQ;QACN,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,SAAS,KAAK,GAAG;IACnB;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAU;SAAU;QAC3B,UAAU;IACZ;IACA,UAAU;QACR,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;IACP;AACF,GACA;IACE,YAAY;AACd;AAIK,MAAM,WAAW,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,YAAY;AACxE,MAAM,cAAc,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/lib/data.ts"],"sourcesContent":["import { connectToDatabase } from \"@/lib/mongodb\"\r\nimport { Transaction, Category } from \"@/lib/models\"\r\nimport type { Transaction as TransactionType, Category as CategoryType, FinanceSummary } from \"@/lib/types\"\r\n\r\nexport async function getTransactions(limit?: number): Promise<TransactionType[]> {\r\n  try {\r\n    await connectToDatabase()\r\n\r\n    let query = Transaction.find().populate(\"category\").sort({ date: -1 })\r\n\r\n    if (limit) {\r\n      query = query.limit(limit)\r\n    }\r\n\r\n    const transactions = await query.exec()\r\n\r\n    return JSON.parse(JSON.stringify(transactions))\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch transactions:\", error)\r\n    return []\r\n  }\r\n}\r\n\r\nexport async function getTransactionById(id: string): Promise<TransactionType | null> {\r\n  try {\r\n    await connectToDatabase()\r\n    const transaction = await Transaction.findById(id).populate(\"category\")\r\n\r\n    if (!transaction) {\r\n      return null\r\n    }\r\n\r\n    return JSON.parse(JSON.stringify(transaction))\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch transaction:\", error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function getCategories(): Promise<CategoryType[]> {\r\n  try {\r\n    await connectToDatabase()\r\n    const categories = await Category.find().sort({ name: 1 })\r\n\r\n    return JSON.parse(JSON.stringify(categories))\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch categories:\", error)\r\n    return []\r\n  }\r\n}\r\n\r\nexport async function getCategoryById(id: string): Promise<CategoryType | null> {\r\n  try {\r\n    await connectToDatabase()\r\n    const category = await Category.findById(id)\r\n\r\n    if (!category) {\r\n      return null\r\n    }\r\n\r\n    return JSON.parse(JSON.stringify(category))\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch category:\", error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function getFinanceSummary(): Promise<FinanceSummary> {\r\n  try {\r\n    await connectToDatabase()\r\n\r\n    // Get all transactions\r\n    const transactions = await Transaction.find().populate(\"category\")\r\n\r\n    // Calculate total income and expenses\r\n    let totalIncome = 0\r\n    let totalExpenses = 0\r\n\r\n    transactions.forEach((transaction) => {\r\n      if (transaction.amount > 0) {\r\n        totalIncome += transaction.amount\r\n      } else {\r\n        totalExpenses += Math.abs(transaction.amount)\r\n      }\r\n    })\r\n\r\n    // Calculate category summaries\r\n    const categoryMap = new Map()\r\n\r\n    transactions.forEach((transaction) => {\r\n      if (!transaction.category) return\r\n\r\n      const categoryId = transaction.category._id.toString()\r\n      const amount = Math.abs(transaction.amount)\r\n\r\n      if (!categoryMap.has(categoryId)) {\r\n        categoryMap.set(categoryId, {\r\n          _id: categoryId,\r\n          name: transaction.category.name,\r\n          color: transaction.category.color,\r\n          icon: transaction.category.icon,\r\n          total: 0,\r\n        })\r\n      }\r\n\r\n      categoryMap.get(categoryId).total += amount\r\n    })\r\n\r\n    // Convert to array and calculate percentages\r\n    const categorySummaries = Array.from(categoryMap.values())\r\n    const totalAmount = totalIncome + totalExpenses\r\n\r\n    categorySummaries.forEach((category) => {\r\n      category.percentage = totalAmount > 0 ? (category.total / totalAmount) * 100 : 0\r\n    })\r\n\r\n    // Sort by total amount (descending)\r\n    categorySummaries.sort((a, b) => b.total - a.total)\r\n\r\n    return {\r\n      totalIncome,\r\n      totalExpenses,\r\n      balance: totalIncome - totalExpenses,\r\n      categorySummaries,\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch finance summary:\", error)\r\n    return {\r\n      totalIncome: 0,\r\n      totalExpenses: 0,\r\n      balance: 0,\r\n      categorySummaries: [],\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/category-icon.tsx"],"sourcesContent":["import {\r\n    Utensils,\r\n    Car,\r\n    Home,\r\n    Film,\r\n    ShoppingBag,\r\n    Bolt,\r\n    HeartPulse,\r\n    Book,\r\n    ShowerHeadIcon as Shower,\r\n    Plane,\r\n    Gift,\r\n    Ellipsis,\r\n    Wallet,\r\n    Briefcase,\r\n    TrendingUp,\r\n    PlusCircle,\r\n    Circle,\r\n    type LucideIcon,\r\n    type LightbulbIcon as LucideProps,\r\n  } from \"lucide-react\"\r\n  \r\n  interface CategoryIconProps extends LucideProps {\r\n    name: string\r\n  }\r\n  \r\n  const iconMap: Record<string, LucideIcon> = {\r\n    utensils: Utensils,\r\n    car: Car,\r\n    home: Home,\r\n    film: Film,\r\n    \"shopping-bag\": ShoppingBag,\r\n    bolt: Bolt,\r\n    \"heart-pulse\": HeartPulse,\r\n    book: Book,\r\n    shower: Shower,\r\n    plane: Plane,\r\n    gift: Gift,\r\n    ellipsis: Ellipsis,\r\n    wallet: Wallet,\r\n    briefcase: Briefcase,\r\n    \"trending-up\": TrendingUp,\r\n    \"plus-circle\": PlusCircle,\r\n    circle: Circle,\r\n  }\r\n  \r\n  export function CategoryIcon({ name, ...props }: CategoryIconProps) {\r\n    const Icon = iconMap[name] || Circle\r\n  \r\n    return <Icon {...props} />\r\n  }\r\n  "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AA0BE,MAAM,UAAsC;IAC1C,UAAU,0MAAA,CAAA,WAAQ;IAClB,KAAK,gMAAA,CAAA,MAAG;IACR,MAAM,mMAAA,CAAA,OAAI;IACV,MAAM,kMAAA,CAAA,OAAI;IACV,gBAAgB,oNAAA,CAAA,cAAW;IAC3B,MAAM,kMAAA,CAAA,OAAI;IACV,eAAe,kNAAA,CAAA,aAAU;IACzB,MAAM,kMAAA,CAAA,OAAI;IACV,QAAQ,sNAAA,CAAA,iBAAM;IACd,OAAO,oMAAA,CAAA,QAAK;IACZ,MAAM,kMAAA,CAAA,OAAI;IACV,UAAU,0MAAA,CAAA,WAAQ;IAClB,QAAQ,sMAAA,CAAA,SAAM;IACd,WAAW,4MAAA,CAAA,YAAS;IACpB,eAAe,kNAAA,CAAA,aAAU;IACzB,eAAe,kNAAA,CAAA,aAAU;IACzB,QAAQ,sMAAA,CAAA,SAAM;AAChB;AAEO,SAAS,aAAa,EAAE,IAAI,EAAE,GAAG,OAA0B;IAChE,MAAM,OAAO,OAAO,CAAC,KAAK,IAAI,sMAAA,CAAA,SAAM;IAEpC,qBAAO,8OAAC;QAAM,GAAG,KAAK;;;;;;AACxB","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/category-list.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport { Pencil } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { getCategories } from \"@/lib/data\"\r\nimport { CategoryIcon } from \"@/components/category-icon\"\r\n\r\nexport async function CategoryList() {\r\n  const categories = await getCategories()\r\n\r\n  if (categories.length === 0) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center py-12 text-center\">\r\n        <p className=\"text-muted-foreground mb-4\">No categories found</p>\r\n        <Link href=\"/categories/new\">\r\n          <Button>Add your first category</Button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Group categories by type\r\n  const expenseCategories = categories.filter((category) => category.type === \"expense\")\r\n  const incomeCategories = categories.filter((category) => category.type === \"income\")\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium mb-4\">Expense Categories</h3>\r\n        <div className=\"overflow-x-auto\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Category</TableHead>\r\n                <TableHead>Color</TableHead>\r\n                <TableHead>Icon</TableHead>\r\n                <TableHead className=\"w-[50px]\"></TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {expenseCategories.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={4} className=\"text-center\">\r\n                    No expense categories found\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                expenseCategories.map((category) => (\r\n                  <TableRow key={category._id}>\r\n                    <TableCell className=\"font-medium\">{category.name}</TableCell>\r\n                    <TableCell>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <div className=\"w-4 h-4 rounded-full\" style={{ backgroundColor: category.color }} />\r\n                        <span className=\"text-xs text-muted-foreground\">{category.color}</span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <CategoryIcon name={category.icon} className=\"h-4 w-4\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Link href={`/categories/${category._id}/edit`}>\r\n                        <Button variant=\"ghost\" size=\"icon\">\r\n                          <Pencil className=\"h-4 w-4\" />\r\n                          <span className=\"sr-only\">Edit</span>\r\n                        </Button>\r\n                      </Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-lg font-medium mb-4\">Income Categories</h3>\r\n        <div className=\"overflow-x-auto\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Category</TableHead>\r\n                <TableHead>Color</TableHead>\r\n                <TableHead>Icon</TableHead>\r\n                <TableHead className=\"w-[50px]\"></TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {incomeCategories.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={4} className=\"text-center\">\r\n                    No income categories found\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                incomeCategories.map((category) => (\r\n                  <TableRow key={category._id}>\r\n                    <TableCell className=\"font-medium\">{category.name}</TableCell>\r\n                    <TableCell>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <div className=\"w-4 h-4 rounded-full\" style={{ backgroundColor: category.color }} />\r\n                        <span className=\"text-xs text-muted-foreground\">{category.color}</span>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <CategoryIcon name={category.icon} className=\"h-4 w-4\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Link href={`/categories/${category._id}/edit`}>\r\n                        <Button variant=\"ghost\" size=\"icon\">\r\n                          <Pencil className=\"h-4 w-4\" />\r\n                          <span className=\"sr-only\">Edit</span>\r\n                        </Button>\r\n                      </Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1065, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/components/category-list-loading.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\n\r\nexport function CategoryListLoading() {\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium mb-4\">Expense Categories</h3>\r\n        <div className=\"overflow-x-auto\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Category</TableHead>\r\n                <TableHead>Color</TableHead>\r\n                <TableHead>Icon</TableHead>\r\n                <TableHead className=\"w-[50px]\"></TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {Array.from({ length: 3 }).map((_, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <Skeleton className=\"h-4 w-32\" />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Skeleton className=\"h-4 w-4 rounded-full\" />\r\n                      <Skeleton className=\"h-4 w-16\" />\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Skeleton className=\"h-4 w-4\" />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Skeleton className=\"h-8 w-8 rounded-md\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-lg font-medium mb-4\">Income Categories</h3>\r\n        <div className=\"overflow-x-auto\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Category</TableHead>\r\n                <TableHead>Color</TableHead>\r\n                <TableHead>Icon</TableHead>\r\n                <TableHead className=\"w-[50px]\"></TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {Array.from({ length: 3 }).map((_, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <Skeleton className=\"h-4 w-32\" />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Skeleton className=\"h-4 w-4 rounded-full\" />\r\n                      <Skeleton className=\"h-4 w-16\" />\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Skeleton className=\"h-4 w-4\" />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Skeleton className=\"h-8 w-8 rounded-md\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAA2B;;;;;;kCACzC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,0HAAA,CAAA,QAAK;;8CACJ,8OAAC,0HAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,0HAAA,CAAA,WAAQ;;0DACP,8OAAC,0HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,0HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,0HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,0HAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;;;;;;;;;;;;8CAGzB,8OAAC,0HAAA,CAAA,YAAS;8CACP,MAAM,IAAI,CAAC;wCAAE,QAAQ;oCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,8OAAC,0HAAA,CAAA,WAAQ;;8DACP,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;8DAEtB,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,6HAAA,CAAA,WAAQ;gEAAC,WAAU;;;;;;0EACpB,8OAAC,6HAAA,CAAA,WAAQ;gEAAC,WAAU;;;;;;;;;;;;;;;;;8DAGxB,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;8DAEtB,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;;2CAdT;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAuBzB,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAA2B;;;;;;kCACzC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,0HAAA,CAAA,QAAK;;8CACJ,8OAAC,0HAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,0HAAA,CAAA,WAAQ;;0DACP,8OAAC,0HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,0HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,0HAAA,CAAA,YAAS;0DAAC;;;;;;0DACX,8OAAC,0HAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;;;;;;;;;;;;8CAGzB,8OAAC,0HAAA,CAAA,YAAS;8CACP,MAAM,IAAI,CAAC;wCAAE,QAAQ;oCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,8OAAC,0HAAA,CAAA,WAAQ;;8DACP,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;8DAEtB,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,6HAAA,CAAA,WAAQ;gEAAC,WAAU;;;;;;0EACpB,8OAAC,6HAAA,CAAA,WAAQ;gEAAC,WAAU;;;;;;;;;;;;;;;;;8DAGxB,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;8DAEtB,8OAAC,0HAAA,CAAA,YAAS;8DACR,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;;2CAdT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwB/B","debugId":null}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/lenovo/Desktop/intern/assignment/finance-tracker/app/categories/page.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport { ArrowLeft, PlusCircle } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { CategoryList } from \"@/components/category-list\"\r\nimport { Suspense } from \"react\"\r\nimport { CategoryListLoading } from \"@/components/category-list-loading\"\r\n\r\nexport default function CategoriesPage() {\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <Link href=\"/\" className=\"inline-flex items-center\">\r\n          <Button variant=\"ghost\" className=\"gap-1\">\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back to Dashboard\r\n          </Button>\r\n        </Link>\r\n        <Link href=\"/categories/new\">\r\n          <Button>\r\n            <PlusCircle className=\"mr-2 h-4 w-4\" />\r\n            Add Category\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Categories</CardTitle>\r\n          <CardDescription>Manage your transaction categories</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Suspense fallback={<CategoryListLoading />}>\r\n            <CategoryList />\r\n          </Suspense>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCACvB,cAAA,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,WAAU;;8CAChC,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;kCAIrC,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,8OAAC,2HAAA,CAAA,SAAM;;8CACL,8OAAC,kNAAA,CAAA,aAAU;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;0BAK7C,8OAAC,yHAAA,CAAA,OAAI;;kCACH,8OAAC,yHAAA,CAAA,aAAU;;0CACT,8OAAC,yHAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,8OAAC,yHAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAEnB,8OAAC,yHAAA,CAAA,cAAW;kCACV,cAAA,8OAAC,qMAAA,CAAA,WAAQ;4BAAC,wBAAU,8OAAC,0IAAA,CAAA,sBAAmB;;;;;sCACtC,cAAA,8OAAC,+HAAA,CAAA,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMzB","debugId":null}}]
}